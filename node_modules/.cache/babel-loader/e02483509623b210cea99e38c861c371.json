{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/pages/addQuestions.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst AddQuestions = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  let history = useHistory();\n  const inputTitleRef = useRef();\n  const inputContentRef = useRef();\n  const inputTopicRef = useRef();\n\n  const handleBody = e => {\n    console.log(e);\n    inputContentRef.current.value = e;\n  };\n\n  const addQuestion = async (questionTopic, questionTitle, questionContent) => {\n    console.log(\"add post log\" + questionContent);\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/forum/\", {\n        topic: questionTopic,\n        title: questionTitle,\n        content: questionContent,\n        user: JSON.parse(localStorage.getItem(\"user\"))._id\n      }, {\n        headers: {\n          auth: localStorage.getItem(\"token\")\n        }\n      });\n      await props.sendQuestionsGetRequest({\n        title\n      });\n      console.log(\"response is :\" + JSON.stringify(response));\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const AddQuestionsOnClick = async () => {\n    // console.log(inputContentRef.current);\n    try {\n      await addQuestion(inputTopicRef.current.value, inputTitleRef.current.value, inputContentRef.current.value);\n      setTopic(\"\");\n      setTitle(\"\");\n      history.push(\"/forum\");\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"writeBlogSection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pt-5\",\n          children: [\"Welcome\", \" \", localStorage.getItem(\"user\") && JSON.parse(localStorage.getItem(\"user\")).firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputTopic\",\n            children: \"Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputTopicRef,\n            type: \"text\",\n            className: \"form-control border border-dark\",\n            id: \"inputTopic\",\n            border: true,\n            \"border-dark\": true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputTitle\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputTitleRef,\n            type: \"text\",\n            className: \"form-control border border-dark\",\n            id: \"inputTitle\",\n            border: true,\n            \"border-dark\": true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputContent\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            className: \"border border-dark\",\n            placeholder: \"write something amazing...\",\n            modules: AddQuestions.modules,\n            formats: AddQuestions.formats,\n            onChange: handleBody,\n            id: \"inputContent\",\n            ref: inputContentRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/forum\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => AddQuestionsOnClick(),\n            type: \"button\",\n            className: \"btn mt-5 postButton\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Ask\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddQuestions, \"lDVtLOhdz/7U0d6VVCIZ7X+po78=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddQuestions;\nAddQuestions.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nAddQuestions.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n/*\n * PropType validation\n */\n\nexport default AddQuestions;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuestions\");","map":{"version":3,"sources":["/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/pages/addQuestions.js"],"names":["React","useRef","useState","ReactQuill","Link","useHistory","axios","require","default","AddQuestions","props","title","setTitle","topic","setTopic","history","inputTitleRef","inputContentRef","inputTopicRef","handleBody","e","console","log","current","value","addQuestion","questionTopic","questionTitle","questionContent","response","post","content","user","JSON","parse","localStorage","getItem","_id","headers","auth","sendQuestionsGetRequest","stringify","error","AddQuestionsOnClick","push","firstName","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nconst axios = require(\"axios\").default;\n\nconst AddQuestions = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [topic, setTopic] = useState(\"\");\n  let history = useHistory();\n\n  const inputTitleRef = useRef();\n  const inputContentRef = useRef();\n  const inputTopicRef = useRef();\n\n  const handleBody = (e) => {\n    console.log(e);\n    inputContentRef.current.value = e;\n  };\n\n  const addQuestion = async (questionTopic, questionTitle, questionContent) => {\n    console.log(\"add post log\" + questionContent);\n\n    try {\n\n      const response = await axios.post(\"http://localhost:3001/forum/\", {\n        topic: questionTopic,\n        title: questionTitle,\n        content: questionContent,\n        user: JSON.parse(localStorage.getItem(\"user\"))._id,\n      },\n                                        {\n          headers: {\n            auth: localStorage.getItem(\"token\"),\n          },\n      }                                );\n\n      await props.sendQuestionsGetRequest({ title });\n      console.log(\"response is :\" + JSON.stringify(response));\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const AddQuestionsOnClick = async () => {\n    // console.log(inputContentRef.current);\n    try {\n      await addQuestion(\n        inputTopicRef.current.value,\n        inputTitleRef.current.value,\n        inputContentRef.current.value\n      );\n      setTopic(\"\");\n      setTitle(\"\");\n      history.push(\"/forum\");\n    } catch (error) {\n      console.log(\"error\");\n    }\n  };\n\n  return (\n    <section className=\"writeBlogSection\">\n      <div className=\"container\">\n        <form>\n          <h1 className=\"pt-5\">\n            Welcome{\" \"}\n            {localStorage.getItem(\"user\") &&\n              JSON.parse(localStorage.getItem(\"user\")).firstName}\n          </h1>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputTopic\">Topic</label>\n            <input\n              ref={inputTopicRef}\n              type=\"text\"\n              className=\"form-control border border-dark\"\n              id=\"inputTopic\"\n              border\n              border-dark\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputTitle\">Title</label>\n            <input\n              ref={inputTitleRef}\n              type=\"text\"\n              className=\"form-control border border-dark\"\n              id=\"inputTitle\"\n              border\n              border-dark\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputContent\">Content</label>\n            <ReactQuill\n              className=\"border border-dark\"\n              placeholder=\"write something amazing...\"\n              modules={AddQuestions.modules}\n              formats={AddQuestions.formats}\n              onChange={handleBody}\n              id=\"inputContent\"\n              ref={inputContentRef}\n            />\n          </div>\n          <Link to=\"/forum\">\n            <button\n              onClick={() => AddQuestionsOnClick()}\n              type=\"button\"\n              className=\"btn mt-5 postButton\"\n            >\n              <h3>Ask</h3>\n            </button>\n          </Link>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nAddQuestions.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nAddQuestions.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\n/*\n * PropType validation\n */\n\nexport default AddQuestions;\n"]},"metadata":{},"sourceType":"module"}