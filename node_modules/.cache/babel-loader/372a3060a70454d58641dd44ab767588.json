{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/components/addPosts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst AddPosts = props => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  let history = useHistory();\n  const inputTitleRef = useRef();\n  const inputContentRef = useRef();\n\n  const handleBody = e => {\n    console.log(e);\n    inputContentRef.current.value = e;\n  };\n\n  const addPost = async (postTitle, postContent) => {\n    console.log(\"add post log\" + postContent); // TODO\n\n    try {\n      const response = await axios.post(\"http://localhost:3001/blogs/\", {\n        title: postTitle,\n        content: postContent\n      });\n      await props.sendGetRequest({\n        title\n      });\n      console.log(\"response is :\" + JSON.stringify(response));\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n  const addPostsOnClick = async () => {\n    // console.log(inputContentRef.current);\n    try {\n      await addPost(inputTitleRef.current.value, inputContentRef.current.value);\n      setTitle(\"\");\n      history.push(\"/blog\");\n    } catch (error) {\n      console.log(\"error\");\n    } //  setContent(\"\");\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"writeBlogSection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pt-5\",\n          children: \" Welcome\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputTitle\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            ref: inputTitleRef,\n            type: \"text\",\n            className: \"form-control border border-dark\",\n            id: \"inputTitle\",\n            border: true,\n            \"border-dark\": true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputContent\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            className: \"border border-dark\",\n            placeholder: \"write something amazing...\",\n            modules: AddPosts.modules,\n            formats: AddPosts.formats,\n            onChange: handleBody,\n            id: \"inputContent\",\n            ref: inputContentRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => addPostsOnClick(),\n          type: \"button\",\n          className: \"btn mt-5 postButton\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AddPosts, \"fdSk1Orf/eAo0A+t3NuMKTGFmug=\", false, function () {\n  return [useHistory];\n});\n\n_c = AddPosts;\nAddPosts.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nAddPosts.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n/*\n * PropType validation\n */\n\nexport default AddPosts;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPosts\");","map":{"version":3,"sources":["/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/components/addPosts.js"],"names":["React","useRef","useState","ReactQuill","useHistory","axios","require","default","AddPosts","props","title","setTitle","history","inputTitleRef","inputContentRef","handleBody","e","console","log","current","value","addPost","postTitle","postContent","response","post","content","sendGetRequest","JSON","stringify","error","addPostsOnClick","push","modules","formats","toolbar","header","font","size","list","indent"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,MAAMC,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAP,CAAiBC,OAA/B;;AACA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAE1B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIU,OAAO,GAAGR,UAAU,EAAxB;AAEA,QAAMS,aAAa,GAAGZ,MAAM,EAA5B;AACA,QAAMa,eAAe,GAAGb,MAAM,EAA9B;;AAEA,QAAMc,UAAU,GAAIC,CAAD,IAAO;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAF,IAAAA,eAAe,CAACK,OAAhB,CAAwBC,KAAxB,GAAgCJ,CAAhC;AACD,GAHD;;AAKA,QAAMK,OAAO,GAAG,OAAOC,SAAP,EAAkBC,WAAlB,KAAkC;AAChDN,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBK,WAA7B,EADgD,CAEhD;;AACA,QAAI;AACF,YAAMC,QAAQ,GAAG,MAAMnB,KAAK,CAACoB,IAAN,CACrB,8BADqB,EAErB;AACEf,QAAAA,KAAK,EAAEY,SADT;AAEEI,QAAAA,OAAO,EAAEH;AAFX,OAFqB,CAAvB;AAOA,YAAMd,KAAK,CAACkB,cAAN,CAAqB;AAAEjB,QAAAA;AAAF,OAArB,CAAN;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAkBU,IAAI,CAACC,SAAL,CAAeL,QAAf,CAA9B;AACD,KAVD,CAUE,OAAOM,KAAP,EAAc;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAYY,KAAZ;AACA,YAAMA,KAAN;AACD;AACF,GAjBD;;AAmBE,QAAMC,eAAe,GAAG,YAAY;AAClC;AACA,QAAI;AACF,YAAMV,OAAO,CACXR,aAAa,CAACM,OAAd,CAAsBC,KADX,EAEXN,eAAe,CAACK,OAAhB,CAAwBC,KAFb,CAAb;AAIAT,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAC,MAAAA,OAAO,CAACoB,IAAR,CAAa,OAAb;AACD,KAPD,CAOE,OAAOF,KAAP,EAAc;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAXiC,CAYlC;;AACD,GAbD;;AAgBF,sBACE;AAAS,IAAA,SAAS,EAAC,kBAAnB;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,YAAA,GAAG,EAAEL,aADP;AAEE,YAAA,IAAI,EAAC,MAFP;AAGE,YAAA,SAAS,EAAC,iCAHZ;AAIE,YAAA,EAAE,EAAC,YAJL;AAKE,YAAA,MAAM,MALR;AAME;AANF;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAaE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,UAAD;AACE,YAAA,SAAS,EAAC,oBADZ;AAEE,YAAA,WAAW,EAAC,4BAFd;AAGE,YAAA,OAAO,EAAEL,QAAQ,CAACyB,OAHpB;AAIE,YAAA,OAAO,EAAEzB,QAAQ,CAAC0B,OAJpB;AAKE,YAAA,QAAQ,EAAEnB,UALZ;AAME,YAAA,EAAE,EAAC,cANL;AAOE,YAAA,GAAG,EAAED;AAPP;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbF,eAyBE;AACE,UAAA,OAAO,EAAE,MAAMiB,eAAe,EADhC;AAEE,UAAA,IAAI,EAAC,QAFP;AAGE,UAAA,SAAS,EAAC,qBAHZ;AAAA,iCAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,gBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CAvFD;;GAAMvB,Q;UAGUJ,U;;;KAHVI,Q;AAyFNA,QAAQ,CAACyB,OAAT,GAAmB;AACjBE,EAAAA,OAAO,EAAE,CACP,CAAC;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAD,EAAkB;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAAlB,EAAmC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAnC,CADO,EAEP,CAAC;AAAEC,IAAAA,IAAI,EAAE;AAAR,GAAD,CAFO,EAGP,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB,EAAgC,QAAhC,EAA0C,YAA1C,CAHO,EAIP,CACE;AAAEC,IAAAA,IAAI,EAAE;AAAR,GADF,EAEE;AAAEA,IAAAA,IAAI,EAAE;AAAR,GAFF,EAGE;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAHF,EAIE;AAAEA,IAAAA,MAAM,EAAE;AAAV,GAJF,CAJO,EAUP,CAAC,MAAD,EAAS,OAAT,EAAkB,OAAlB,CAVO,EAWP,CAAC,OAAD,CAXO;AADQ,CAAnB;AAeA;AACA;AACA;AACA;;AACAhC,QAAQ,CAAC0B,OAAT,GAAmB,CACjB,QADiB,EAEjB,MAFiB,EAGjB,MAHiB,EAIjB,MAJiB,EAKjB,QALiB,EAMjB,WANiB,EAOjB,QAPiB,EAQjB,YARiB,EASjB,MATiB,EAUjB,QAViB,EAWjB,QAXiB,EAYjB,MAZiB,EAajB,OAbiB,EAcjB,OAdiB,CAAnB;AAiBA;AACA;AACA;;AAGA,eAAe1B,QAAf","sourcesContent":["import React, { useRef, useState } from 'react';\nimport ReactQuill from \"react-quill\";\nimport { useHistory } from 'react-router-dom';\n\nconst axios = require(\"axios\").default;\nconst AddPosts = (props) => {\n\n  const [title, setTitle] = useState(\"\");\n  let history = useHistory();\n\n  const inputTitleRef = useRef();\n  const inputContentRef = useRef();\n\n  const handleBody = (e) => {\n    console.log(e);\n    inputContentRef.current.value = e;\n  };\n\n  const addPost = async (postTitle, postContent) => {\n    console.log(\"add post log\" + postContent);\n    // TODO\n    try {\n      const response = await axios.post(\n        \"http://localhost:3001/blogs/\",\n        {\n          title: postTitle,\n          content: postContent,\n        }\n      );\n      await props.sendGetRequest({ title });\n      console.log(\"response is :\" + JSON.stringify(response));\n    } catch (error) {\n      console.log(error);\n      throw error;\n    }\n  };\n\n    const addPostsOnClick = async () => {\n      // console.log(inputContentRef.current);\n      try {\n        await addPost(\n          inputTitleRef.current.value,\n          inputContentRef.current.value\n        );\n        setTitle(\"\");\n        history.push(\"/blog\");\n      } catch (error) {\n        console.log(\"error\");\n      }\n      //  setContent(\"\");\n    };\n\n\n  return (\n    <section className=\"writeBlogSection\">\n      <div className=\"container\">\n        <form>\n          <h1 className=\"pt-5\"> Welcome</h1>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputTitle\">Title</label>\n            <input\n              ref={inputTitleRef}\n              type=\"text\"\n              className=\"form-control border border-dark\"\n              id=\"inputTitle\"\n              border\n              border-dark\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputContent\">Content</label>\n            <ReactQuill\n              className=\"border border-dark\"\n              placeholder=\"write something amazing...\"\n              modules={AddPosts.modules}\n              formats={AddPosts.formats}\n              onChange={handleBody}\n              id=\"inputContent\"\n              ref={inputContentRef}\n            />\n          </div>\n          <button\n            onClick={() => addPostsOnClick()}\n            type=\"button\"\n            className=\"btn mt-5 postButton\"\n          >\n            <h3>Save</h3>\n          </button>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nAddPosts.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nAddPosts.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\n/*\n * PropType validation\n */\n\n\nexport default AddPosts;"]},"metadata":{},"sourceType":"module"}