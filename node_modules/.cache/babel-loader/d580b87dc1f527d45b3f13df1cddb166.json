{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/components/showQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ShowQuestion = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const foundQuestion = props.showQuestionDetails.find(question => id == question._id);\n  console.log(\"question\" + foundQuestion);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginTop: \"10rem\"\n      },\n      children: \"This is to show question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Answers\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), foundQuestion ? /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: foundQuestion.content\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 12\n      }, this) : \"Question content not found\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ShowQuestion, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowQuestion;\nexport default ShowQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowQuestion\");","map":{"version":3,"sources":["/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/components/showQuestion.js"],"names":["React","useParams","ShowQuestion","props","id","foundQuestion","showQuestionDetails","find","question","_id","console","log","marginTop","__html","content"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAE9B,QAAM;AAAEC,IAAAA;AAAF,MAASH,SAAS,EAAxB;AACA,QAAMI,aAAa,GAAGF,KAAK,CAACG,mBAAN,CAA0BC,IAA1B,CACnBC,QAAD,IAAcJ,EAAE,IAAII,QAAQ,CAACC,GADT,CAAtB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAWN,aAAvB;AAEA,sBACE;AAAA,4BACE;AAAI,MAAA,KAAK,EAAE;AAAEO,QAAAA,SAAS,EAAE;AAAb,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAIIP,aAAa,gBACZ;AACC,QAAA,uBAAuB,EAAE;AACvBQ,UAAAA,MAAM,EAAER,aAAa,CAACS;AADC;AAD1B;AAAA;AAAA;AAAA;AAAA,cADY,GAKJ,4BATb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAwBD,CAhCD;;GAAMZ,Y;UAEWD,S;;;KAFXC,Y;AAkCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nconst ShowQuestion = (props) => {\n\n  const { id } = useParams();\n  const foundQuestion = props.showQuestionDetails.find(\n    (question) => id == question._id\n  );\n  console.log(\"question\"+foundQuestion);\n\n  return (\n    <>\n      <h1 style={{ marginTop: \"10rem\" }}>This is to show question</h1>\n      <div>\n        <h1>Answers</h1>\n\n        {\n          foundQuestion ? \n          (<p\n            dangerouslySetInnerHTML={{\n              __html: foundQuestion.content,\n            }} \n          ></p>) : \"Question content not found\"\n        }\n\n         {/* <p\n            dangerouslySetInnerHTML={{\n              __html: question.content,\n            }} \n          ></p> */}\n\n      </div>\n    </>\n  );\n};\n\nexport default ShowQuestion;\n"]},"metadata":{},"sourceType":"module"}