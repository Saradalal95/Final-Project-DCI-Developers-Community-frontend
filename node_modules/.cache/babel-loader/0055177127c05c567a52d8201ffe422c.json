{"ast":null,"code":"// import React, { useRef, useState } from 'react';\n// import ReactQuill from \"react-quill\";\n// import { useHistory } from 'react-router-dom';\n// const axios = require(\"axios\").default;\n// const AddPosts = (props) => {\n//   const [title, setTitle] = useState(\"\");\n//   let history = useHistory();\n//   const inputTitleRef = useRef();\n//   const inputContentRef = useRef();\n//   const handleBody = (e) => {\n//     console.log(e);\n//     inputContentRef.current.value = e;\n//   };\n//   const addPost = async (postTitle, postContent) => {\n//     console.log(\"add post log\" + postContent);\n//     // TODO\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/blogs/\",\n//         {\n//           title: postTitle,\n//           content: postContent,\n//         }\n//       );\n//       await props.sendGetRequest({ title });\n//       console.log(\"response is :\" + JSON.stringify(response));\n//     } catch (error) {\n//       console.log(error);\n//       throw error;\n//     }\n//   };\n//     const addPostsOnClick = async () => {\n//       // console.log(inputContentRef.current);\n//       try {\n//         await addPost(\n//           inputTitleRef.current.value,\n//           inputContentRef.current.value\n//         );\n//         setTitle(\"\");\n//         history.push(\"/blog\");\n//       } catch (error) {\n//         console.log(\"error\");\n//       }\n//       //  setContent(\"\");\n//     };\n//   return (\n//     <section className=\"writeBlogSection\">\n//       <div className=\"container\">\n//         <form>\n//           <h1 className=\"pt-5\"> Welcome</h1>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"inputTitle\">Title</label>\n//             <input\n//               ref={inputTitleRef}\n//               type=\"text\"\n//               className=\"form-control border border-dark\"\n//               id=\"inputTitle\"\n//               border\n//               border-dark\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"inputContent\">Content</label>\n//             <ReactQuill\n//               className=\"border border-dark\"\n//               placeholder=\"write something amazing...\"\n//               modules={AddPosts.modules}\n//               formats={AddPosts.formats}\n//               onChange={handleBody}\n//               id=\"inputContent\"\n//               ref={inputContentRef}\n//             />\n//           </div>\n//           <button\n//             onClick={() => addPostsOnClick()}\n//             type=\"button\"\n//             className=\"btn mt-5 postButton\"\n//           >\n//             <h3>Save</h3>\n//           </button>\n//         </form>\n//       </div>\n//     </section>\n//   );\n// };\n// AddPosts.modules = {\n//   toolbar: [\n//     [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n//     [{ size: [] }],\n//     [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n//     [\n//       { list: \"ordered\" },\n//       { list: \"bullet\" },\n//       { indent: \"-1\" },\n//       { indent: \"+1\" },\n//     ],\n//     [\"link\", \"image\", \"video\"],\n//     [\"clean\"],\n//   ],\n// };\n// /*\n//  * Quill editor formats\n//  * See https://quilljs.com/docs/formats/\n//  */\n// AddPosts.formats = [\n//   \"header\",\n//   \"font\",\n//   \"size\",\n//   \"bold\",\n//   \"italic\",\n//   \"underline\",\n//   \"strike\",\n//   \"blockquote\",\n//   \"list\",\n//   \"bullet\",\n//   \"indent\",\n//   \"link\",\n//   \"image\",\n//   \"video\",\n// ];\n// /*\n//  * PropType validation\n//  */\n// export default AddPosts;","map":{"version":3,"sources":["/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/components/addPosts.js"],"names":[],"mappings":"AAAA;AACA;AACA;AAEA;AAIA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA","sourcesContent":["// import React, { useRef, useState } from 'react';\n// import ReactQuill from \"react-quill\";\n// import { useHistory } from 'react-router-dom';\n\n// const axios = require(\"axios\").default;\n\n\n\n// const AddPosts = (props) => {\n\n//   const [title, setTitle] = useState(\"\");\n//   let history = useHistory();\n\n//   const inputTitleRef = useRef();\n//   const inputContentRef = useRef();\n\n//   const handleBody = (e) => {\n//     console.log(e);\n//     inputContentRef.current.value = e;\n//   };\n\n//   const addPost = async (postTitle, postContent) => {\n//     console.log(\"add post log\" + postContent);\n//     // TODO\n//     try {\n//       const response = await axios.post(\n//         \"http://localhost:3001/blogs/\",\n//         {\n//           title: postTitle,\n//           content: postContent,\n//         }\n//       );\n//       await props.sendGetRequest({ title });\n//       console.log(\"response is :\" + JSON.stringify(response));\n//     } catch (error) {\n//       console.log(error);\n//       throw error;\n//     }\n//   };\n\n//     const addPostsOnClick = async () => {\n//       // console.log(inputContentRef.current);\n//       try {\n//         await addPost(\n//           inputTitleRef.current.value,\n//           inputContentRef.current.value\n//         );\n//         setTitle(\"\");\n//         history.push(\"/blog\");\n//       } catch (error) {\n//         console.log(\"error\");\n//       }\n//       //  setContent(\"\");\n//     };\n\n\n//   return (\n//     <section className=\"writeBlogSection\">\n//       <div className=\"container\">\n//         <form>\n//           <h1 className=\"pt-5\"> Welcome</h1>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"inputTitle\">Title</label>\n//             <input\n//               ref={inputTitleRef}\n//               type=\"text\"\n//               className=\"form-control border border-dark\"\n//               id=\"inputTitle\"\n//               border\n//               border-dark\n//             />\n//           </div>\n//           <div className=\"form-group\">\n//             <label htmlFor=\"inputContent\">Content</label>\n//             <ReactQuill\n//               className=\"border border-dark\"\n//               placeholder=\"write something amazing...\"\n//               modules={AddPosts.modules}\n//               formats={AddPosts.formats}\n//               onChange={handleBody}\n//               id=\"inputContent\"\n//               ref={inputContentRef}\n//             />\n//           </div>\n//           <button\n//             onClick={() => addPostsOnClick()}\n//             type=\"button\"\n//             className=\"btn mt-5 postButton\"\n//           >\n//             <h3>Save</h3>\n//           </button>\n//         </form>\n//       </div>\n//     </section>\n//   );\n// };\n\n// AddPosts.modules = {\n//   toolbar: [\n//     [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n//     [{ size: [] }],\n//     [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n//     [\n//       { list: \"ordered\" },\n//       { list: \"bullet\" },\n//       { indent: \"-1\" },\n//       { indent: \"+1\" },\n//     ],\n//     [\"link\", \"image\", \"video\"],\n//     [\"clean\"],\n//   ],\n// };\n// /*\n//  * Quill editor formats\n//  * See https://quilljs.com/docs/formats/\n//  */\n// AddPosts.formats = [\n//   \"header\",\n//   \"font\",\n//   \"size\",\n//   \"bold\",\n//   \"italic\",\n//   \"underline\",\n//   \"strike\",\n//   \"blockquote\",\n//   \"list\",\n//   \"bullet\",\n//   \"indent\",\n//   \"link\",\n//   \"image\",\n//   \"video\",\n// ];\n\n// /*\n//  * PropType validation\n//  */\n\n\n// export default AddPosts;"]},"metadata":{},"sourceType":"module"}