{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/pages/updateMyQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst UpdateMyQuestion = props => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [title, setTitle] = useState();\n  const [topic, setTopic] = useState();\n  const [content, setContent] = useState(\"\");\n  useEffect(() => {\n    const foundQuestionToEdit = props.edit.find(question => question._id === id);\n\n    if (foundQuestionToEdit && id) {\n      console.log(foundQuestionToEdit);\n      setTopic(foundQuestionToEdit.topic);\n      setTitle(foundQuestionToEdit.title);\n      setContent(foundQuestionToEdit.content);\n    }\n  }, [id, props.edit]);\n\n  const handleBody = value => {\n    setContent(value);\n  };\n\n  const updateQuestion = async (topic, title, content) => {\n    var data = {\n      topic,\n      title,\n      content\n    };\n\n    try {\n      axios.put(`http://localhost:3001/forum/${id}`, data).then(response => {\n        props.sendQuestionsGetRequest();\n        window.location.replace(\"/profile\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"writeBlogSection\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pt-5\",\n          children: [\"Welcome\", \" \", localStorage.getItem(\"user\") && JSON.parse(localStorage.getItem(\"user\")).firstName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputTopic\",\n            children: \"Topic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: topic,\n            onChange: e => setTopic(e.target.value),\n            type: \"text\",\n            className: \"form-control border border-dark\",\n            id: \"inputTopic\",\n            border: true,\n            \"border-dark\": true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputTitle\",\n            children: \"Title\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            value: title,\n            onChange: e => setTitle(e.target.value),\n            type: \"text\",\n            className: \"form-control border border-dark\",\n            id: \"inputTitle\",\n            border: true,\n            \"border-dark\": true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"inputContent\",\n            children: \"Content\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ReactQuill, {\n            value: content,\n            className: \"border border-dark\",\n            placeholder: \"write something amazing...\",\n            modules: UpdateMyQuestion.modules,\n            formats: UpdateMyQuestion.formats,\n            onChange: handleBody,\n            id: \"inputContent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/userprofile\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              updateQuestion(topic, title, content);\n            },\n            className: \"btn mt-5 postButton\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UpdateMyQuestion, \"QKB4ojWix+g2N9EUQdAZYdX1Ooc=\", false, function () {\n  return [useParams];\n});\n\n_c = UpdateMyQuestion;\nUpdateMyQuestion.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nUpdateMyQuestion.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n/*\n * PropType validation\n */\n\nexport default UpdateMyQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateMyQuestion\");","map":{"version":3,"sources":["/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/pages/updateMyQuestion.js"],"names":["React","useEffect","useRef","useState","ReactQuill","Link","useHistory","useParams","axios","require","default","UpdateMyQuestion","props","id","title","setTitle","topic","setTopic","content","setContent","foundQuestionToEdit","edit","find","question","_id","console","log","handleBody","value","updateQuestion","data","put","then","response","sendQuestionsGetRequest","window","location","replace","error","localStorage","getItem","JSON","parse","firstName","e","target","modules","formats","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useParams } from \"react-router-dom\";\n\nconst axios = require(\"axios\").default;\n\nconst UpdateMyQuestion = (props) => {\n  const { id } = useParams();\n\n  const [title, setTitle] = useState();\n  const [topic, setTopic] = useState();\n  const [content, setContent] = useState(\"\");\n\n  useEffect(() => {\n    const foundQuestionToEdit = props.edit.find(\n      (question) => question._id === id\n    );\n\n    if (foundQuestionToEdit && id) {\n      console.log(foundQuestionToEdit);\n      setTopic(foundQuestionToEdit.topic);\n      setTitle(foundQuestionToEdit.title);\n      setContent(foundQuestionToEdit.content);\n    }\n  }, [id, props.edit]);\n\n  const handleBody = (value) => {\n    setContent(value);\n  };\n  const updateQuestion = async (topic, title, content) => {\n    var data = { topic, title, content };\n\n    try {\n      axios.put(`http://localhost:3001/forum/${id}`, data).then((response) => {\n        props.sendQuestionsGetRequest();\n        window.location.replace(\"/profile\");\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return (\n    <section className=\"writeBlogSection\">\n      <div className=\"container\">\n        <form>\n          <h1 className=\"pt-5\">\n            Welcome{\" \"}\n            {localStorage.getItem(\"user\") &&\n              JSON.parse(localStorage.getItem(\"user\")).firstName}\n          </h1>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"inputTopic\">Topic</label>\n            <input\n              value={topic}\n              onChange={(e) => setTopic(e.target.value)}\n              type=\"text\"\n              className=\"form-control border border-dark\"\n              id=\"inputTopic\"\n              border\n              border-dark\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputTitle\">Title</label>\n            <input\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              type=\"text\"\n              className=\"form-control border border-dark\"\n              id=\"inputTitle\"\n              border\n              border-dark\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"inputContent\">Content</label>\n            <ReactQuill\n              value={content}\n              className=\"border border-dark\"\n              placeholder=\"write something amazing...\"\n              modules={UpdateMyQuestion.modules}\n              formats={UpdateMyQuestion.formats}\n              onChange={handleBody}\n              id=\"inputContent\"\n            />{\" \"}\n          </div>\n          <Link to=\"/userprofile\">\n            <button\n              onClick={() => {\n                updateQuestion(topic, title, content);\n              }}\n              className=\"btn mt-5 postButton\"\n            >\n              <h3>Save</h3>\n            </button>\n          </Link>\n        </form>\n      </div>\n    </section>\n  );\n};\n\nUpdateMyQuestion.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nUpdateMyQuestion.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\n/*\n * PropType validation\n */\n\nexport default UpdateMyQuestion;\n"]},"metadata":{},"sourceType":"module"}