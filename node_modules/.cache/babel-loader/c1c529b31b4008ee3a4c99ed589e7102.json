{"ast":null,"code":"var _jsxFileName = \"/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/pages/showQuestion.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst axios = require(\"axios\").default;\n\nconst ShowQuestion = props => {\n  _s();\n\n  console.log(props);\n  const {\n    id\n  } = useParams();\n  const [answer, setAnswer] = useState(\"\");\n  const inputContentRef = useRef();\n  const foundQuestion = props.showQuestionDetails.find(question => id == question._id);\n  console.log(foundQuestion);\n\n  const handleBody = e => {\n    console.log(e);\n    inputContentRef.current.value = e;\n    setAnswer(e);\n  };\n\n  const addAnswers = async answer => {\n    let tempArray = [...foundQuestion.answer, answer];\n    var data = {\n      answer\n    };\n\n    try {\n      axios.put(`http://localhost:3001/forum/${id}`, {\n        answer: tempArray\n      }).then(response => {\n        props.sendQuestionsGetRequest();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n\n    console.log(data);\n  };\n\n  console.log(answer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container showQuestionDetails-container\",\n    children: [foundQuestion ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card showQuestionDetails-cards p-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header showQuestionDetails-header pt-2 pb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: foundQuestion.user ? foundQuestion.user.firstName : \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"float-right topic\",\n            children: foundQuestion.topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title showQuestionDetails-title\",\n            children: foundQuestion.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text showQuestionDetails-content\",\n            dangerouslySetInnerHTML: {\n              __html: foundQuestion.content\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : \"Question content not found\", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mb-5\",\n      children: \"Your Answer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n          className: \"border border-dark\",\n          placeholder: \"write something amazing...\",\n          modules: ShowQuestion.modules,\n          formats: ShowQuestion.formats,\n          onChange: handleBody,\n          ref: inputContentRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => addAnswers(answer),\n      type: \"button\",\n      className: \"btn btn-warning p-3 submit-button\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), \" \", foundQuestion ? foundQuestion.answer.map(ans => /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"card showQuestionDetails-cards p-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-header showQuestionDetails-header\",\n        children: \"Answer\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"card-text showAnswerDetails\",\n          dangerouslySetInnerHTML: {\n            __html: ans\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)) : \"\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ShowQuestion, \"E9saO3/hRxJYaWj2+t28a4Pmzhc=\", false, function () {\n  return [useParams];\n});\n\n_c = ShowQuestion;\nShowQuestion.modules = {\n  toolbar: [[{\n    header: \"1\"\n  }, {\n    header: \"2\"\n  }, {\n    font: []\n  }], [{\n    size: []\n  }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n    list: \"ordered\"\n  }, {\n    list: \"bullet\"\n  }, {\n    indent: \"-1\"\n  }, {\n    indent: \"+1\"\n  }], [\"link\", \"image\", \"video\"], [\"clean\"]]\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\n\nShowQuestion.formats = [\"header\", \"font\", \"size\", \"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\", \"list\", \"bullet\", \"indent\", \"link\", \"image\", \"video\"];\n/*\n * PropType validation\n */\n\nexport default ShowQuestion;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShowQuestion\");","map":{"version":3,"sources":["/home/dci/Desktop/DCI APP/Final-Project-DCI-Developer-Community-Frontend/src/pages/showQuestion.js"],"names":["React","useRef","useState","ReactQuill","useParams","axios","require","default","ShowQuestion","props","console","log","id","answer","setAnswer","inputContentRef","foundQuestion","showQuestionDetails","find","question","_id","handleBody","e","current","value","addAnswers","tempArray","data","put","then","response","sendQuestionsGetRequest","error","user","firstName","topic","title","__html","content","modules","formats","map","ans","toolbar","header","font","size","list","indent"],"mappings":"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","sourcesContent":["import React, { useRef, useState } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { useParams } from \"react-router-dom\";\n\nconst axios = require(\"axios\").default;\n\nconst ShowQuestion = (props) => {\n  console.log(props);\n\n  const { id } = useParams();\n\n  const [answer, setAnswer] = useState(\"\");\n\n  const inputContentRef = useRef();\n\n  const foundQuestion = props.showQuestionDetails.find(\n    (question) => id == question._id\n  );\n  console.log(foundQuestion);\n\n  const handleBody = (e) => {\n    console.log(e);\n    inputContentRef.current.value = e;\n    setAnswer(e);\n  };\n\n  const addAnswers = async (answer) => {\n    let tempArray = [...foundQuestion.answer, answer];\n\n    var data = { answer };\n    try {\n      axios\n        .put(`http://localhost:3001/forum/${id}`, { answer: tempArray })\n        .then((response) => {\n          props.sendQuestionsGetRequest();\n        });\n    } catch (error) {\n      console.log(error);\n    }\n    console.log(data);\n  };\n\n  console.log(answer);\n\n  return (\n    <div className=\"container showQuestionDetails-container\">\n      {foundQuestion ? (\n        <>\n          <div className=\"card showQuestionDetails-cards p-3\">\n            <div className=\"card-header showQuestionDetails-header pt-2 pb-2\">\n              <span>\n                {foundQuestion.user ? foundQuestion.user.firstName : \"\"}\n              </span>\n              <span className=\"float-right topic\">{foundQuestion.topic}</span>\n            </div>\n            <div className=\"card-body\">\n              <h5 className=\"card-title showQuestionDetails-title\">\n                {foundQuestion.title}\n              </h5>\n              <p\n                className=\"card-text showQuestionDetails-content\"\n                dangerouslySetInnerHTML={{\n                  __html: foundQuestion.content,\n                }}\n              ></p>\n            </div>\n          </div>\n        </>\n      ) : (\n        \"Question content not found\"\n      )}\n      <h1 className=\"mb-5\">Your Answer</h1>\n      <form className=\"form-container\">\n        <div className=\"form-group\">\n          <ReactQuill\n            className=\"border border-dark\"\n            placeholder=\"write something amazing...\"\n            modules={ShowQuestion.modules}\n            formats={ShowQuestion.formats}\n            onChange={handleBody}\n            ref={inputContentRef}\n          />\n        </div>\n      </form>\n      <button\n        onClick={() => addAnswers(answer)}\n        type=\"button\"\n        className=\"btn btn-warning p-3 submit-button\"\n      >\n        Submit\n      </button>{\" \"}\n      {foundQuestion\n        ? foundQuestion.answer.map((ans) => (\n            <div class=\"card showQuestionDetails-cards p-3\">\n              <div class=\"card-header showQuestionDetails-header\">Answer</div>\n              <div class=\"card-body\">\n                <p\n                  className=\"card-text showAnswerDetails\"\n                  dangerouslySetInnerHTML={{\n                    __html: ans,\n                  }}\n                ></p>\n              </div>\n            </div>\n          ))\n        : \"\"}\n    </div>\n  );\n};\n\nShowQuestion.modules = {\n  toolbar: [\n    [{ header: \"1\" }, { header: \"2\" }, { font: [] }],\n    [{ size: [] }],\n    [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\n    [\n      { list: \"ordered\" },\n      { list: \"bullet\" },\n      { indent: \"-1\" },\n      { indent: \"+1\" },\n    ],\n    [\"link\", \"image\", \"video\"],\n    [\"clean\"],\n  ],\n};\n/*\n * Quill editor formats\n * See https://quilljs.com/docs/formats/\n */\nShowQuestion.formats = [\n  \"header\",\n  \"font\",\n  \"size\",\n  \"bold\",\n  \"italic\",\n  \"underline\",\n  \"strike\",\n  \"blockquote\",\n  \"list\",\n  \"bullet\",\n  \"indent\",\n  \"link\",\n  \"image\",\n  \"video\",\n];\n\n/*\n * PropType validation\n */\n\nexport default ShowQuestion;\n"]},"metadata":{},"sourceType":"module"}